<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Emoji NFT Prompt Generator</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: #fff;
            overflow-x: hidden;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }

        header {
            text-align: center;
            margin-bottom: 40px;
            animation: fadeInDown 0.8s ease-out;
        }

        h1 {
            font-size: 3rem;
            font-weight: 800;
            background: linear-gradient(45deg, #ff6b6b, #4ecdc4, #45b7d1);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-bottom: 10px;
            text-shadow: 0 4px 8px rgba(0,0,0,0.3);
        }

        .subtitle {
            font-size: 1.2rem;
            opacity: 0.9;
            margin-bottom: 30px;
        }

        .main-content {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 30px;
            margin-bottom: 40px;
        }

        .generator-section, .nft-display {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 30px;
            border: 1px solid rgba(255, 255, 255, 0.2);
            animation: fadeInUp 0.8s ease-out;
        }

        .input-group {
            margin-bottom: 20px;
        }

        label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #fff;
        }

        input[type="text"], textarea {
            width: 100%;
            padding: 12px 16px;
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-radius: 10px;
            background: rgba(255, 255, 255, 0.1);
            color: #fff;
            font-size: 16px;
            transition: all 0.3s ease;
        }

        input[type="text"]:focus, textarea:focus {
            outline: none;
            border-color: #4ecdc4;
            box-shadow: 0 0 20px rgba(78, 205, 196, 0.3);
        }

        input[type="text"]::placeholder, textarea::placeholder {
            color: rgba(255, 255, 255, 0.7);
        }

        .generate-btn {
            width: 100%;
            padding: 14px;
            background: linear-gradient(45deg, #ff6b6b, #4ecdc4);
            border: none;
            border-radius: 10px;
            color: white;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .generate-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 30px rgba(255, 107, 107, 0.4);
        }

        .nft-card {
            background: rgba(255, 255, 255, 0.05);
            border-radius: 15px;
            padding: 20px;
            border: 2px solid rgba(255, 255, 255, 0.2);
            text-align: center;
            min-height: 300px;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }

        .nft-emoji {
            font-size: 4rem;
            margin: 20px 0;
            text-shadow: 0 4px 8px rgba(0,0,0,0.3);
        }

        .nft-title {
            font-size: 1.5rem;
            font-weight: 700;
            margin-bottom: 10px;
            color: #4ecdc4;
        }

        .nft-description {
            font-size: 0.9rem;
            opacity: 0.8;
            margin-bottom: 15px;
        }

        .nft-price {
            font-size: 1.3rem;
            font-weight: 700;
            color: #ff6b6b;
            margin-bottom: 15px;
        }

        .wallet-section {
            background: rgba(255, 255, 255, 0.1);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 30px;
            border: 1px solid rgba(255, 255, 255, 0.2);
            animation: fadeInUp 0.8s ease-out 0.2s both;
        }

        .wallet-options {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }

        .wallet-btn {
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 15px 20px;
            background: rgba(255, 255, 255, 0.1);
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-radius: 10px;
            color: white;
            text-decoration: none;
            font-weight: 600;
            transition: all 0.3s ease;
            cursor: pointer;
        }

        .wallet-btn:hover {
            background: rgba(255, 255, 255, 0.2);
            border-color: #4ecdc4;
            transform: translateY(-2px);
        }

        .wallet-icon {
            width: 24px;
            height: 24px;
            margin-right: 10px;
            border-radius: 50%;
        }

        .opensea-section {
            background: rgba(33, 150, 243, 0.2);
            border: 2px solid rgba(33, 150, 243, 0.5);
            padding: 20px;
            border-radius: 15px;
            margin-top: 20px;
        }

        .opensea-btn {
            width: 100%;
            padding: 15px;
            background: linear-gradient(45deg, #2196F3, #1976D2);
            border: none;
            border-radius: 10px;
            color: white;
            font-size: 16px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            text-transform: uppercase;
            letter-spacing: 1px;
        }

        .opensea-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 10px 30px rgba(33, 150, 243, 0.4);
        }

        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
            gap: 20px;
            margin-top: 30px;
        }

        .stat-card {
            background: rgba(255, 255, 255, 0.1);
            border-radius: 10px;
            padding: 20px;
            text-align: center;
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .stat-number {
            font-size: 2rem;
            font-weight: 700;
            color: #4ecdc4;
            margin-bottom: 5px;
        }

        .stat-label {
            font-size: 0.9rem;
            opacity: 0.8;
        }

        .loading {
            display: none;
            text-align: center;
            padding: 20px;
        }

        .spinner {
            border: 3px solid rgba(255, 255, 255, 0.3);
            border-top: 3px solid #4ecdc4;
            border-radius: 50%;
            width: 40px;
            height: 40px;
            animation: spin 1s linear infinite;
            margin: 0 auto 15px;
        }

        .success-message {
            background: rgba(76, 175, 80, 0.2);
            border: 1px solid rgba(76, 175, 80, 0.5);
            padding: 15px;
            border-radius: 10px;
            margin: 15px 0;
            display: none;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        @keyframes fadeInDown {
            from {
                opacity: 0;
                transform: translateY(-30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        @keyframes pulse {
            0%, 100% { transform: scale(1); }
            50% { transform: scale(1.05); }
        }

        .pulse {
            animation: pulse 2s infinite;
        }

        @media (max-width: 768px) {
            .main-content {
                grid-template-columns: 1fr;
            }
            
            h1 {
                font-size: 2rem;
            }
            
            .container {
                padding: 15px;
            }
            
            .generator-section, .nft-display, .wallet-section {
                padding: 20px;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <header>
            <h1>🎨 Emoji NFT Generator</h1>
            <p class="subtitle">Transform your prompts into valuable emoji NFTs for AI prompt engineering</p>
        </header>

        <div class="main-content">
            <div class="generator-section">
                <h2>🚀 Create Your NFT</h2>
                <div class="input-group">
                    <label for="prompt">Enter Your Prompt:</label>
                    <textarea id="prompt" placeholder="Type your creative prompt here..." rows="4"></textarea>
                </div>
                <div class="input-group">
                    <label for="title">NFT Title:</label>
                    <input type="text" id="title" placeholder="Give your NFT a catchy title">
                </div>
                <button class="generate-btn" onclick="generateNFT()">
                    ✨ Generate NFT
                </button>
                
                <div class="loading" id="loading">
                    <div class="spinner"></div>
                    <p>Generating your unique NFT...</p>
                </div>
                
                <div class="success-message" id="successMessage">
                    🎉 NFT Generated Successfully! Ready for minting.
                </div>
            </div>

            <div class="nft-display">
                <div class="nft-card" id="nftCard">
                    <div>
                        <div class="nft-emoji" id="nftEmoji">🎭</div>
                        <div class="nft-title" id="nftTitle">Your NFT Title</div>
                        <div class="nft-description" id="nftDescription">
                            Generate your first emoji NFT prompt to see the magic happen!
                        </div>
                    </div>
                    <div class="nft-price" id="nftPrice">0.05 ETH</div>
                </div>
            </div>
        </div>

        <div class="wallet-section">
            <h2>💰 Connect Your Wallet</h2>
            <div class="wallet-options">
                <button class="wallet-btn" onclick="connectWallet('phantom')">
                    <div class="wallet-icon" style="background: linear-gradient(45deg, #AB9FF2, #7B68EE);"></div>
                    Phantom Wallet
                </button>
                <button class="wallet-btn" onclick="connectWallet('trust')">
                    <div class="wallet-icon" style="background: linear-gradient(45deg, #3375BB, #1E88E5);"></div>
                    Trust Wallet
                </button>
                <button class="wallet-btn" onclick="connectWallet('metamask')">
                    <div class="wallet-icon" style="background: linear-gradient(45deg, #F6851B, #E2761B);"></div>
                    MetaMask
                </button>
            </div>

            <div class="opensea-section">
                <h3>🌊 OpenSea Integration</h3>
                <p style="margin-bottom: 15px;">List your NFT on OpenSea marketplace or buy existing emoji NFTs</p>
                <button class="opensea-btn" onclick="openSeaIntegration()">
                    🛒 Buy/Sell on OpenSea
                </button>
            </div>
        </div>

        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-number" id="totalNFTs">1,247</div>
                <div class="stat-label">Total NFTs Created</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="activeTraders">892</div>
                <div class="stat-label">Active Traders</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="totalVolume">45.7</div>
                <div class="stat-label">Total Volume (ETH)</div>
            </div>
            <div class="stat-card">
                <div class="stat-number" id="avgPrice">0.08</div>
                <div class="stat-label">Average Price (ETH)</div>
            </div>
        </div>
    </div>

    <script>
        // Emoji mapping for different prompt types
        const emojiMap = {
            'art': '🎨', 'creative': '✨', 'design': '🎭', 'music': '🎵', 'dance': '💃',
            'love': '💕', 'heart': '❤️', 'happy': '😊', 'joy': '🎉', 'celebration': '🎊',
            'nature': '🌿', 'tree': '🌳', 'flower': '🌸', 'ocean': '🌊', 'mountain': '⛰️',
            'tech': '💻', 'robot': '🤖', 'rocket': '🚀', 'innovation': '💡', 'science': '🔬',
            'food': '🍕', 'cooking': '👨‍🍳', 'coffee': '☕', 'cake': '🎂', 'fruit': '🍎',
            'travel': '✈️', 'adventure': '🗺️', 'journey': '🧭', 'explore': '🔍', 'discovery': '💎',
            'money': '💰', 'wealth': '💸', 'success': '🏆', 'achievement': '🥇', 'victory': '🎖️',
            'magic': '🪄', 'wizard': '🧙‍♂️', 'fantasy': '🦄', 'dragon': '🐉', 'castle': '🏰',
            'space': '🌌', 'star': '⭐', 'planet': '🪐', 'alien': '👽', 'galaxy': '🌠',
            'fire': '🔥', 'lightning': '⚡', 'storm': '⛈️', 'rainbow': '🌈', 'sun': '☀️'
        };

        // Advanced prompt-to-emoji conversion
        function convertPromptToEmoji(prompt) {
            const words = prompt.toLowerCase().split(/\s+/);
            let emojis = [];
            
            // Find matching emojis
            words.forEach(word => {
                for (const [key, emoji] of Object.entries(emojiMap)) {
                    if (word.includes(key) || key.includes(word)) {
                        emojis.push(emoji);
                        break;
                    }
                }
            });
            
            // If no matches, create a combination based on prompt sentiment
            if (emojis.length === 0) {
                const defaultEmojis = ['🎭', '✨', '🎨', '💎', '🌟'];
                emojis = [defaultEmojis[Math.floor(Math.random() * defaultEmojis.length)]];
            }
            
            // Combine emojis (max 3)
            return emojis.slice(0, 3).join('');
        }

        // Generate NFT function
        function generateNFT() {
            const prompt = document.getElementById('prompt').value;
            const title = document.getElementById('title').value;
            
            if (!prompt.trim()) {
                alert('Please enter a prompt to generate your NFT!');
                return;
            }
            
            // Show loading
            document.getElementById('loading').style.display = 'block';
            document.querySelector('.generate-btn').disabled = true;
            
            // Simulate generation delay
            setTimeout(() => {
                const emoji = convertPromptToEmoji(prompt);
                const nftTitle = title || `Prompt NFT #${Math.floor(Math.random() * 9999)}`;
                const price = (Math.random() * 0.1 + 0.02).toFixed(3);
                
                // Update NFT display
                document.getElementById('nftEmoji').textContent = emoji;
                document.getElementById('nftTitle').textContent = nftTitle;
                document.getElementById('nftDescription').textContent = 
                    `AI-generated emoji NFT representing: "${prompt.substring(0, 80)}${prompt.length > 80 ? '...' : ''}"`;
                document.getElementById('nftPrice').textContent = `${price} ETH`;
                
                // Add pulse animation
                document.getElementById('nftCard').classList.add('pulse');
                setTimeout(() => {
                    document.getElementById('nftCard').classList.remove('pulse');
                }, 2000);
                
                // Hide loading, show success
                document.getElementById('loading').style.display = 'none';
                document.getElementById('successMessage').style.display = 'block';
                document.querySelector('.generate-btn').disabled = false;
                
                // Update stats
                updateStats();
                
                // Hide success message after 3 seconds
                setTimeout(() => {
                    document.getElementById('successMessage').style.display = 'none';
                }, 3000);
            }, 2000);
        }

        // Wallet connection functions
        function connectWallet(walletType) {
            const walletNames = {
                'phantom': 'Phantom',
                'trust': 'Trust Wallet',
                'metamask': 'MetaMask'
            };
            
            // Simulate wallet connection
            const button = event.target.closest('.wallet-btn');
            const originalText = button.innerHTML;
            
            button.innerHTML = `<div class="spinner" style="width: 20px; height: 20px; margin-right: 10px;"></div>Connecting...`;
            button.disabled = true;
            
            setTimeout(() => {
                alert(`${walletNames[walletType]} connected successfully! 🎉`);
                button.innerHTML = originalText.replace(walletNames[walletType], `✅ ${walletNames[walletType]}`);
                button.disabled = false;
                button.style.background = 'rgba(76, 175, 80, 0.3)';
                button.style.borderColor = '#4CAF50';
            }, 2000);
        }

        // OpenSea integration
        function openSeaIntegration() {
            const button = event.target;
            const originalText = button.textContent;
            
            button.textContent = 'Opening OpenSea...';
            button.disabled = true;
            
            setTimeout(() => {
                alert('🌊 OpenSea integration ready! You can now list your NFTs or browse the marketplace.');
                button.textContent = originalText;
                button.disabled = false;
            }, 1500);
        }

        // Update stats simulation
        function updateStats() {
            const stats = ['totalNFTs', 'activeTraders', 'totalVolume', 'avgPrice'];
            stats.forEach(stat => {
                const element = document.getElementById(stat);
                const currentValue = parseFloat(element.textContent.replace(',', ''));
                const increment = stat === 'totalNFTs' ? 1 : 
                                 stat === 'activeTraders' ? Math.floor(Math.random() * 3) :
                                 stat === 'totalVolume' ? Math.random() * 0.5 :
                                 Math.random() * 0.01;
                
                const newValue = currentValue + increment;
                element.textContent = stat.includes('Volume') || stat.includes('Price') ? 
                                    newValue.toFixed(2) : 
                                    Math.floor(newValue).toLocaleString();
            });
        }

        // Initialize
        document.addEventListener('DOMContentLoaded', function() {
            // Add some initial animation
            setTimeout(() => {
                document.querySelector('.nft-card').style.transform = 'rotateY(5deg)';
            }, 1000);
        });

        // Enter key support for prompt input
        document.getElementById('prompt').addEventListener('keypress', function(e) {
            if (e.key === 'Enter' && e.ctrlKey) {
                generateNFT();
            }
        });
    </script>
</body>
</html>
